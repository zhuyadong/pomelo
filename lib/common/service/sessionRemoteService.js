"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const index_1 = require("../../index");
class SessionRemote {
    constructor(app) {
        this.app = app;
    }
    bind(sid, uid, cb) {
        this.app.get("sessionService").bind(sid, uid, cb);
    }
    unbind(sid, uid, cb) {
        this.app.get("sessionService").unbind(sid, uid, cb);
    }
    push(sid, key, value, cb) {
        this.app.get("sessionService").import(sid, key, value, cb);
    }
    pushAll(sid, settings, cb) {
        this.app.get("sessionService").importAll(sid, settings, cb);
    }
    getBackendSessionBySid(sid, cb) {
        var session = this.app.get("sessionService").get(sid);
        if (!session) {
            index_1.utils.invokeCallback(cb);
            return;
        }
        index_1.utils.invokeCallback(cb, null, session.toFrontendSession().export());
    }
    getBackendSessionsByUid(uid, cb) {
        var sessions = this.app.get("sessionService").getByUid(uid);
        if (!sessions) {
            index_1.utils.invokeCallback(cb);
            return;
        }
        var res = [];
        for (var i = 0, l = sessions.length; i < l; i++) {
            res.push(sessions[i].toFrontendSession().export());
        }
        index_1.utils.invokeCallback(cb, null, res);
    }
    kickBySid(sid, reason, cb) {
        this.app.get("sessionService").kickBySessionId(sid, reason, cb);
    }
    kickByUid(uid, reason, cb) {
        this.app.get("sessionService").kick(uid, reason, cb);
    }
}
exports.SessionRemote = SessionRemote;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2Vzc2lvblJlbW90ZVNlcnZpY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJzZXNzaW9uUmVtb3RlU2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLHVDQUFpRDtBQUVqRDtJQUNFLFlBQXFCLEdBQWdCO1FBQWhCLFFBQUcsR0FBSCxHQUFHLENBQWE7SUFBRyxDQUFDO0lBRXpDLElBQUksQ0FBQyxHQUFXLEVBQUUsR0FBVyxFQUFFLEVBQVk7UUFDekMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsZ0JBQWdCLENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBRyxFQUFFLEdBQUcsRUFBRSxFQUFFLENBQUMsQ0FBQztJQUNwRCxDQUFDO0lBRUQsTUFBTSxDQUFDLEdBQVcsRUFBRSxHQUFXLEVBQUUsRUFBWTtRQUMzQyxJQUFJLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLEVBQUUsQ0FBQyxDQUFDO0lBQ3RELENBQUM7SUFFRCxJQUFJLENBQUMsR0FBVyxFQUFFLEdBQVEsRUFBRSxLQUFVLEVBQUUsRUFBWTtRQUNsRCxJQUFJLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLEtBQUssRUFBRSxFQUFFLENBQUMsQ0FBQztJQUM3RCxDQUFDO0lBRUQsT0FBTyxDQUFDLEdBQVcsRUFBRSxRQUFhLEVBQUUsRUFBWTtRQUM5QyxJQUFJLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxHQUFHLEVBQUUsUUFBUSxFQUFFLEVBQUUsQ0FBQyxDQUFDO0lBQzlELENBQUM7SUFFRCxzQkFBc0IsQ0FBQyxHQUFXLEVBQUUsRUFBWTtRQUM5QyxJQUFJLE9BQU8sR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUN0RCxFQUFFLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUM7WUFDYixhQUFLLENBQUMsY0FBYyxDQUFDLEVBQUUsQ0FBQyxDQUFDO1lBQ3pCLE1BQU0sQ0FBQztRQUNULENBQUM7UUFDRCxhQUFLLENBQUMsY0FBYyxDQUFDLEVBQUUsRUFBRSxJQUFJLEVBQUUsT0FBTyxDQUFDLGlCQUFpQixFQUFFLENBQUMsTUFBTSxFQUFFLENBQUMsQ0FBQztJQUN2RSxDQUFDO0lBRUQsdUJBQXVCLENBQUMsR0FBVyxFQUFFLEVBQVk7UUFDL0MsSUFBSSxRQUFRLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsZ0JBQWdCLENBQUMsQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDNUQsRUFBRSxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDO1lBQ2QsYUFBSyxDQUFDLGNBQWMsQ0FBQyxFQUFFLENBQUMsQ0FBQztZQUN6QixNQUFNLENBQUM7UUFDVCxDQUFDO1FBRUQsSUFBSSxHQUFHLEdBQUcsRUFBRSxDQUFDO1FBQ2IsR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxRQUFRLENBQUMsTUFBTSxFQUFFLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FBQztZQUNoRCxHQUFHLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxpQkFBaUIsRUFBRSxDQUFDLE1BQU0sRUFBRSxDQUFDLENBQUM7UUFDckQsQ0FBQztRQUNELGFBQUssQ0FBQyxjQUFjLENBQUMsRUFBRSxFQUFFLElBQUksRUFBRSxHQUFHLENBQUMsQ0FBQztJQUN0QyxDQUFDO0lBRUQsU0FBUyxDQUFDLEdBQVcsRUFBRSxNQUFXLEVBQUUsRUFBWTtRQUM5QyxJQUFJLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDLGVBQWUsQ0FBQyxHQUFHLEVBQUUsTUFBTSxFQUFFLEVBQUUsQ0FBQyxDQUFDO0lBQ2xFLENBQUM7SUFFRCxTQUFTLENBQUMsR0FBVyxFQUFFLE1BQVcsRUFBRSxFQUFZO1FBQzlDLElBQUksQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLGdCQUFnQixDQUFDLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBRSxNQUFNLEVBQUUsRUFBRSxDQUFDLENBQUM7SUFDdkQsQ0FBQztDQUNGO0FBakRELHNDQWlEQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFwcGxpY2F0aW9uLCB1dGlscyB9IGZyb20gXCIuLi8uLi9pbmRleFwiO1xyXG5cclxuZXhwb3J0IGNsYXNzIFNlc3Npb25SZW1vdGUge1xyXG4gIGNvbnN0cnVjdG9yKHJlYWRvbmx5IGFwcDogQXBwbGljYXRpb24pIHt9XHJcblxyXG4gIGJpbmQoc2lkOiBudW1iZXIsIHVpZDogc3RyaW5nLCBjYjogRnVuY3Rpb24pIHtcclxuICAgIHRoaXMuYXBwLmdldChcInNlc3Npb25TZXJ2aWNlXCIpLmJpbmQoc2lkLCB1aWQsIGNiKTtcclxuICB9XHJcblxyXG4gIHVuYmluZChzaWQ6IG51bWJlciwgdWlkOiBzdHJpbmcsIGNiOiBGdW5jdGlvbikge1xyXG4gICAgdGhpcy5hcHAuZ2V0KFwic2Vzc2lvblNlcnZpY2VcIikudW5iaW5kKHNpZCwgdWlkLCBjYik7XHJcbiAgfVxyXG5cclxuICBwdXNoKHNpZDogbnVtYmVyLCBrZXk6IGFueSwgdmFsdWU6IGFueSwgY2I6IEZ1bmN0aW9uKSB7XHJcbiAgICB0aGlzLmFwcC5nZXQoXCJzZXNzaW9uU2VydmljZVwiKS5pbXBvcnQoc2lkLCBrZXksIHZhbHVlLCBjYik7XHJcbiAgfVxyXG5cclxuICBwdXNoQWxsKHNpZDogbnVtYmVyLCBzZXR0aW5nczogYW55LCBjYjogRnVuY3Rpb24pIHtcclxuICAgIHRoaXMuYXBwLmdldChcInNlc3Npb25TZXJ2aWNlXCIpLmltcG9ydEFsbChzaWQsIHNldHRpbmdzLCBjYik7XHJcbiAgfVxyXG5cclxuICBnZXRCYWNrZW5kU2Vzc2lvbkJ5U2lkKHNpZDogbnVtYmVyLCBjYjogRnVuY3Rpb24pIHtcclxuICAgIHZhciBzZXNzaW9uID0gdGhpcy5hcHAuZ2V0KFwic2Vzc2lvblNlcnZpY2VcIikuZ2V0KHNpZCk7XHJcbiAgICBpZiAoIXNlc3Npb24pIHtcclxuICAgICAgdXRpbHMuaW52b2tlQ2FsbGJhY2soY2IpO1xyXG4gICAgICByZXR1cm47XHJcbiAgICB9XHJcbiAgICB1dGlscy5pbnZva2VDYWxsYmFjayhjYiwgbnVsbCwgc2Vzc2lvbi50b0Zyb250ZW5kU2Vzc2lvbigpLmV4cG9ydCgpKTtcclxuICB9XHJcblxyXG4gIGdldEJhY2tlbmRTZXNzaW9uc0J5VWlkKHVpZDogc3RyaW5nLCBjYjogRnVuY3Rpb24pIHtcclxuICAgIHZhciBzZXNzaW9ucyA9IHRoaXMuYXBwLmdldChcInNlc3Npb25TZXJ2aWNlXCIpLmdldEJ5VWlkKHVpZCk7XHJcbiAgICBpZiAoIXNlc3Npb25zKSB7XHJcbiAgICAgIHV0aWxzLmludm9rZUNhbGxiYWNrKGNiKTtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG5cclxuICAgIHZhciByZXMgPSBbXTtcclxuICAgIGZvciAodmFyIGkgPSAwLCBsID0gc2Vzc2lvbnMubGVuZ3RoOyBpIDwgbDsgaSsrKSB7XHJcbiAgICAgIHJlcy5wdXNoKHNlc3Npb25zW2ldLnRvRnJvbnRlbmRTZXNzaW9uKCkuZXhwb3J0KCkpO1xyXG4gICAgfVxyXG4gICAgdXRpbHMuaW52b2tlQ2FsbGJhY2soY2IsIG51bGwsIHJlcyk7XHJcbiAgfVxyXG5cclxuICBraWNrQnlTaWQoc2lkOiBudW1iZXIsIHJlYXNvbjogYW55LCBjYjogRnVuY3Rpb24pIHtcclxuICAgIHRoaXMuYXBwLmdldChcInNlc3Npb25TZXJ2aWNlXCIpLmtpY2tCeVNlc3Npb25JZChzaWQsIHJlYXNvbiwgY2IpO1xyXG4gIH1cclxuXHJcbiAga2lja0J5VWlkKHVpZDogc3RyaW5nLCByZWFzb246IGFueSwgY2I6IEZ1bmN0aW9uKSB7XHJcbiAgICB0aGlzLmFwcC5nZXQoXCJzZXNzaW9uU2VydmljZVwiKS5raWNrKHVpZCwgcmVhc29uLCBjYik7XHJcbiAgfVxyXG59XHJcbiJdfQ==