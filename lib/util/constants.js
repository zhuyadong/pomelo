"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.KEYWORDS = {
    BEFORE_FILTER: "__befores__",
    AFTER_FILTER: "__afters__",
    GLOBAL_BEFORE_FILTER: "__globalBefores__",
    GLOBAL_AFTER_FILTER: "__globalAfters__",
    ROUTE: "__routes__",
    BEFORE_STOP_HOOK: "__beforeStopHook__",
    MODULE: "__modules__",
    SERVER_MAP: "__serverMap__",
    RPC_BEFORE_FILTER: "__rpcBefores__",
    RPC_AFTER_FILTER: "__rpcAfters__",
    MASTER_WATCHER: "__masterwatcher__",
    MONITOR_WATCHER: "__monitorwatcher__"
};
exports.FILEPATH = {
    MASTER: "/config/master.json",
    SERVER: "/config/servers.json",
    CRON: "/config/crons.json",
    LOG: "/config/log4js.json",
    SERVER_PROTOS: "/config/serverProtos.json",
    CLIENT_PROTOS: "/config/clientProtos.json",
    MASTER_HA: "/config/masterha.json",
    LIFECYCLE: "/lifecycle.js",
    SERVER_DIR: "/app/servers/",
    CONFIG_DIR: "/config"
};
exports.DIR = {
    HANDLER: "handler",
    REMOTE: "remote",
    CRON: "cron",
    LOG: "logs",
    SCRIPT: "scripts",
    EVENT: "events",
    COMPONENT: "components"
};
exports.RESERVED = {
    BASE: "base",
    MAIN: "main",
    MASTER: "master",
    SERVERS: "servers",
    ENV: "env",
    CPU: "cpu",
    ENV_DEV: "development",
    ENV_PRO: "production",
    ALL: "all",
    SERVER_TYPE: "serverType",
    SERVER_ID: "serverId",
    CURRENT_SERVER: "curServer",
    MODE: "mode",
    TYPE: "type",
    CLUSTER: "clusters",
    STAND_ALONE: "stand-alone",
    START: "start",
    AFTER_START: "afterStart",
    CRONS: "crons",
    ERROR_HANDLER: "errorHandler",
    GLOBAL_ERROR_HANDLER: "globalErrorHandler",
    AUTO_RESTART: "auto-restart",
    RESTART_FORCE: "restart-force",
    CLUSTER_COUNT: "clusterCount",
    CLUSTER_PREFIX: "cluster-server-",
    CLUSTER_SIGNAL: "++",
    RPC_ERROR_HANDLER: "rpcErrorHandler",
    SERVER: "server",
    CLIENT: "client",
    STARTID: "startId",
    STOP_SERVERS: "stop_servers",
    SSH_CONFIG_PARAMS: "ssh_config_params"
};
exports.COMMAND = {
    TASKSET: "taskset",
    KILL: "kill",
    TASKKILL: "taskkill",
    SSH: "ssh"
};
exports.PLATFORM = {
    WIN: "win32",
    LINUX: "linux"
};
exports.LIFECYCLE = {
    BEFORE_STARTUP: "beforeStartup",
    BEFORE_SHUTDOWN: "beforeShutdown",
    AFTER_STARTUP: "afterStartup",
    AFTER_STARTALL: "afterStartAll"
};
exports.SIGNAL = {
    FAIL: 0,
    OK: 1
};
exports.TIME = {
    TIME_WAIT_STOP: 3 * 1000,
    TIME_WAIT_KILL: 5 * 1000,
    TIME_WAIT_RESTART: 5 * 1000,
    TIME_WAIT_COUNTDOWN: 10 * 1000,
    TIME_WAIT_MASTER_KILL: 2 * 60 * 1000,
    TIME_WAIT_MONITOR_KILL: 2 * 1000,
    TIME_WAIT_PING: 30 * 1000,
    TIME_WAIT_MAX_PING: 5 * 60 * 1000,
    DEFAULT_UDP_HEARTBEAT_TIME: 20 * 1000,
    DEFAULT_UDP_HEARTBEAT_TIMEOUT: 100 * 1000,
    DEFAULT_MQTT_HEARTBEAT_TIMEOUT: 90 * 1000
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uc3RhbnRzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiY29uc3RhbnRzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQWEsUUFBQSxRQUFRLEdBQUc7SUFDdEIsYUFBYSxFQUFFLGFBQWE7SUFDNUIsWUFBWSxFQUFFLFlBQVk7SUFDMUIsb0JBQW9CLEVBQUUsbUJBQW1CO0lBQ3pDLG1CQUFtQixFQUFFLGtCQUFrQjtJQUN2QyxLQUFLLEVBQUUsWUFBWTtJQUNuQixnQkFBZ0IsRUFBRSxvQkFBb0I7SUFDdEMsTUFBTSxFQUFFLGFBQWE7SUFDckIsVUFBVSxFQUFFLGVBQWU7SUFDM0IsaUJBQWlCLEVBQUUsZ0JBQWdCO0lBQ25DLGdCQUFnQixFQUFFLGVBQWU7SUFDakMsY0FBYyxFQUFFLG1CQUFtQjtJQUNuQyxlQUFlLEVBQUUsb0JBQW9CO0NBQ3RDLENBQUM7QUFFVyxRQUFBLFFBQVEsR0FBRztJQUN0QixNQUFNLEVBQUUscUJBQXFCO0lBQzdCLE1BQU0sRUFBRSxzQkFBc0I7SUFDOUIsSUFBSSxFQUFFLG9CQUFvQjtJQUMxQixHQUFHLEVBQUUscUJBQXFCO0lBQzFCLGFBQWEsRUFBRSwyQkFBMkI7SUFDMUMsYUFBYSxFQUFFLDJCQUEyQjtJQUMxQyxTQUFTLEVBQUUsdUJBQXVCO0lBQ2xDLFNBQVMsRUFBRSxlQUFlO0lBQzFCLFVBQVUsRUFBRSxlQUFlO0lBQzNCLFVBQVUsRUFBRSxTQUFTO0NBQ3RCLENBQUM7QUFFVyxRQUFBLEdBQUcsR0FBRztJQUNqQixPQUFPLEVBQUUsU0FBUztJQUNsQixNQUFNLEVBQUUsUUFBUTtJQUNoQixJQUFJLEVBQUUsTUFBTTtJQUNaLEdBQUcsRUFBRSxNQUFNO0lBQ1gsTUFBTSxFQUFFLFNBQVM7SUFDakIsS0FBSyxFQUFFLFFBQVE7SUFDZixTQUFTLEVBQUUsWUFBWTtDQUN4QixDQUFDO0FBRVcsUUFBQSxRQUFRLEdBQUc7SUFDdEIsSUFBSSxFQUFFLE1BQU07SUFDWixJQUFJLEVBQUUsTUFBTTtJQUNaLE1BQU0sRUFBRSxRQUFRO0lBQ2hCLE9BQU8sRUFBRSxTQUFTO0lBQ2xCLEdBQUcsRUFBRSxLQUFLO0lBQ1YsR0FBRyxFQUFFLEtBQUs7SUFDVixPQUFPLEVBQUUsYUFBYTtJQUN0QixPQUFPLEVBQUUsWUFBWTtJQUNyQixHQUFHLEVBQUUsS0FBSztJQUNWLFdBQVcsRUFBRSxZQUFZO0lBQ3pCLFNBQVMsRUFBRSxVQUFVO0lBQ3JCLGNBQWMsRUFBRSxXQUFXO0lBQzNCLElBQUksRUFBRSxNQUFNO0lBQ1osSUFBSSxFQUFFLE1BQU07SUFDWixPQUFPLEVBQUUsVUFBVTtJQUNuQixXQUFXLEVBQUUsYUFBYTtJQUMxQixLQUFLLEVBQUUsT0FBTztJQUNkLFdBQVcsRUFBRSxZQUFZO0lBQ3pCLEtBQUssRUFBRSxPQUFPO0lBQ2QsYUFBYSxFQUFFLGNBQWM7SUFDN0Isb0JBQW9CLEVBQUUsb0JBQW9CO0lBQzFDLFlBQVksRUFBRSxjQUFjO0lBQzVCLGFBQWEsRUFBRSxlQUFlO0lBQzlCLGFBQWEsRUFBRSxjQUFjO0lBQzdCLGNBQWMsRUFBRSxpQkFBaUI7SUFDakMsY0FBYyxFQUFFLElBQUk7SUFDcEIsaUJBQWlCLEVBQUUsaUJBQWlCO0lBQ3BDLE1BQU0sRUFBRSxRQUFRO0lBQ2hCLE1BQU0sRUFBRSxRQUFRO0lBQ2hCLE9BQU8sRUFBRSxTQUFTO0lBQ2xCLFlBQVksRUFBRSxjQUFjO0lBQzVCLGlCQUFpQixFQUFFLG1CQUFtQjtDQUN2QyxDQUFDO0FBRVcsUUFBQSxPQUFPLEdBQUc7SUFDckIsT0FBTyxFQUFFLFNBQVM7SUFDbEIsSUFBSSxFQUFFLE1BQU07SUFDWixRQUFRLEVBQUUsVUFBVTtJQUNwQixHQUFHLEVBQUUsS0FBSztDQUNYLENBQUM7QUFFVyxRQUFBLFFBQVEsR0FBRztJQUN0QixHQUFHLEVBQUUsT0FBTztJQUNaLEtBQUssRUFBRSxPQUFPO0NBQ2YsQ0FBQztBQUVXLFFBQUEsU0FBUyxHQUFHO0lBQ3ZCLGNBQWMsRUFBRSxlQUFlO0lBQy9CLGVBQWUsRUFBRSxnQkFBZ0I7SUFDakMsYUFBYSxFQUFFLGNBQWM7SUFDN0IsY0FBYyxFQUFFLGVBQWU7Q0FDaEMsQ0FBQztBQUVXLFFBQUEsTUFBTSxHQUFHO0lBQ3BCLElBQUksRUFBRSxDQUFDO0lBQ1AsRUFBRSxFQUFFLENBQUM7Q0FDTixDQUFDO0FBRVcsUUFBQSxJQUFJLEdBQUc7SUFDbEIsY0FBYyxFQUFFLENBQUMsR0FBRyxJQUFJO0lBQ3hCLGNBQWMsRUFBRSxDQUFDLEdBQUcsSUFBSTtJQUN4QixpQkFBaUIsRUFBRSxDQUFDLEdBQUcsSUFBSTtJQUMzQixtQkFBbUIsRUFBRSxFQUFFLEdBQUcsSUFBSTtJQUM5QixxQkFBcUIsRUFBRSxDQUFDLEdBQUcsRUFBRSxHQUFHLElBQUk7SUFDcEMsc0JBQXNCLEVBQUUsQ0FBQyxHQUFHLElBQUk7SUFDaEMsY0FBYyxFQUFFLEVBQUUsR0FBRyxJQUFJO0lBQ3pCLGtCQUFrQixFQUFFLENBQUMsR0FBRyxFQUFFLEdBQUcsSUFBSTtJQUNqQywwQkFBMEIsRUFBRSxFQUFFLEdBQUcsSUFBSTtJQUNyQyw2QkFBNkIsRUFBRSxHQUFHLEdBQUcsSUFBSTtJQUN6Qyw4QkFBOEIsRUFBRSxFQUFFLEdBQUcsSUFBSTtDQUMxQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IEtFWVdPUkRTID0ge1xuICBCRUZPUkVfRklMVEVSOiBcIl9fYmVmb3Jlc19fXCIsXG4gIEFGVEVSX0ZJTFRFUjogXCJfX2FmdGVyc19fXCIsXG4gIEdMT0JBTF9CRUZPUkVfRklMVEVSOiBcIl9fZ2xvYmFsQmVmb3Jlc19fXCIsXG4gIEdMT0JBTF9BRlRFUl9GSUxURVI6IFwiX19nbG9iYWxBZnRlcnNfX1wiLFxuICBST1VURTogXCJfX3JvdXRlc19fXCIsXG4gIEJFRk9SRV9TVE9QX0hPT0s6IFwiX19iZWZvcmVTdG9wSG9va19fXCIsXG4gIE1PRFVMRTogXCJfX21vZHVsZXNfX1wiLFxuICBTRVJWRVJfTUFQOiBcIl9fc2VydmVyTWFwX19cIixcbiAgUlBDX0JFRk9SRV9GSUxURVI6IFwiX19ycGNCZWZvcmVzX19cIixcbiAgUlBDX0FGVEVSX0ZJTFRFUjogXCJfX3JwY0FmdGVyc19fXCIsXG4gIE1BU1RFUl9XQVRDSEVSOiBcIl9fbWFzdGVyd2F0Y2hlcl9fXCIsXG4gIE1PTklUT1JfV0FUQ0hFUjogXCJfX21vbml0b3J3YXRjaGVyX19cIlxufTtcblxuZXhwb3J0IGNvbnN0IEZJTEVQQVRIID0ge1xuICBNQVNURVI6IFwiL2NvbmZpZy9tYXN0ZXIuanNvblwiLFxuICBTRVJWRVI6IFwiL2NvbmZpZy9zZXJ2ZXJzLmpzb25cIixcbiAgQ1JPTjogXCIvY29uZmlnL2Nyb25zLmpzb25cIixcbiAgTE9HOiBcIi9jb25maWcvbG9nNGpzLmpzb25cIixcbiAgU0VSVkVSX1BST1RPUzogXCIvY29uZmlnL3NlcnZlclByb3Rvcy5qc29uXCIsXG4gIENMSUVOVF9QUk9UT1M6IFwiL2NvbmZpZy9jbGllbnRQcm90b3MuanNvblwiLFxuICBNQVNURVJfSEE6IFwiL2NvbmZpZy9tYXN0ZXJoYS5qc29uXCIsXG4gIExJRkVDWUNMRTogXCIvbGlmZWN5Y2xlLmpzXCIsXG4gIFNFUlZFUl9ESVI6IFwiL2FwcC9zZXJ2ZXJzL1wiLFxuICBDT05GSUdfRElSOiBcIi9jb25maWdcIlxufTtcblxuZXhwb3J0IGNvbnN0IERJUiA9IHtcbiAgSEFORExFUjogXCJoYW5kbGVyXCIsXG4gIFJFTU9URTogXCJyZW1vdGVcIixcbiAgQ1JPTjogXCJjcm9uXCIsXG4gIExPRzogXCJsb2dzXCIsXG4gIFNDUklQVDogXCJzY3JpcHRzXCIsXG4gIEVWRU5UOiBcImV2ZW50c1wiLFxuICBDT01QT05FTlQ6IFwiY29tcG9uZW50c1wiXG59O1xuXG5leHBvcnQgY29uc3QgUkVTRVJWRUQgPSB7XG4gIEJBU0U6IFwiYmFzZVwiLFxuICBNQUlOOiBcIm1haW5cIixcbiAgTUFTVEVSOiBcIm1hc3RlclwiLFxuICBTRVJWRVJTOiBcInNlcnZlcnNcIixcbiAgRU5WOiBcImVudlwiLFxuICBDUFU6IFwiY3B1XCIsXG4gIEVOVl9ERVY6IFwiZGV2ZWxvcG1lbnRcIixcbiAgRU5WX1BSTzogXCJwcm9kdWN0aW9uXCIsXG4gIEFMTDogXCJhbGxcIixcbiAgU0VSVkVSX1RZUEU6IFwic2VydmVyVHlwZVwiLFxuICBTRVJWRVJfSUQ6IFwic2VydmVySWRcIixcbiAgQ1VSUkVOVF9TRVJWRVI6IFwiY3VyU2VydmVyXCIsXG4gIE1PREU6IFwibW9kZVwiLFxuICBUWVBFOiBcInR5cGVcIixcbiAgQ0xVU1RFUjogXCJjbHVzdGVyc1wiLFxuICBTVEFORF9BTE9ORTogXCJzdGFuZC1hbG9uZVwiLFxuICBTVEFSVDogXCJzdGFydFwiLFxuICBBRlRFUl9TVEFSVDogXCJhZnRlclN0YXJ0XCIsXG4gIENST05TOiBcImNyb25zXCIsXG4gIEVSUk9SX0hBTkRMRVI6IFwiZXJyb3JIYW5kbGVyXCIsXG4gIEdMT0JBTF9FUlJPUl9IQU5ETEVSOiBcImdsb2JhbEVycm9ySGFuZGxlclwiLFxuICBBVVRPX1JFU1RBUlQ6IFwiYXV0by1yZXN0YXJ0XCIsXG4gIFJFU1RBUlRfRk9SQ0U6IFwicmVzdGFydC1mb3JjZVwiLFxuICBDTFVTVEVSX0NPVU5UOiBcImNsdXN0ZXJDb3VudFwiLFxuICBDTFVTVEVSX1BSRUZJWDogXCJjbHVzdGVyLXNlcnZlci1cIixcbiAgQ0xVU1RFUl9TSUdOQUw6IFwiKytcIixcbiAgUlBDX0VSUk9SX0hBTkRMRVI6IFwicnBjRXJyb3JIYW5kbGVyXCIsXG4gIFNFUlZFUjogXCJzZXJ2ZXJcIixcbiAgQ0xJRU5UOiBcImNsaWVudFwiLFxuICBTVEFSVElEOiBcInN0YXJ0SWRcIixcbiAgU1RPUF9TRVJWRVJTOiBcInN0b3Bfc2VydmVyc1wiLFxuICBTU0hfQ09ORklHX1BBUkFNUzogXCJzc2hfY29uZmlnX3BhcmFtc1wiXG59O1xuXG5leHBvcnQgY29uc3QgQ09NTUFORCA9IHtcbiAgVEFTS1NFVDogXCJ0YXNrc2V0XCIsXG4gIEtJTEw6IFwia2lsbFwiLFxuICBUQVNLS0lMTDogXCJ0YXNra2lsbFwiLFxuICBTU0g6IFwic3NoXCJcbn07XG5cbmV4cG9ydCBjb25zdCBQTEFURk9STSA9IHtcbiAgV0lOOiBcIndpbjMyXCIsXG4gIExJTlVYOiBcImxpbnV4XCJcbn07XG5cbmV4cG9ydCBjb25zdCBMSUZFQ1lDTEUgPSB7XG4gIEJFRk9SRV9TVEFSVFVQOiBcImJlZm9yZVN0YXJ0dXBcIixcbiAgQkVGT1JFX1NIVVRET1dOOiBcImJlZm9yZVNodXRkb3duXCIsXG4gIEFGVEVSX1NUQVJUVVA6IFwiYWZ0ZXJTdGFydHVwXCIsXG4gIEFGVEVSX1NUQVJUQUxMOiBcImFmdGVyU3RhcnRBbGxcIlxufTtcblxuZXhwb3J0IGNvbnN0IFNJR05BTCA9IHtcbiAgRkFJTDogMCxcbiAgT0s6IDFcbn07XG5cbmV4cG9ydCBjb25zdCBUSU1FID0ge1xuICBUSU1FX1dBSVRfU1RPUDogMyAqIDEwMDAsXG4gIFRJTUVfV0FJVF9LSUxMOiA1ICogMTAwMCxcbiAgVElNRV9XQUlUX1JFU1RBUlQ6IDUgKiAxMDAwLFxuICBUSU1FX1dBSVRfQ09VTlRET1dOOiAxMCAqIDEwMDAsXG4gIFRJTUVfV0FJVF9NQVNURVJfS0lMTDogMiAqIDYwICogMTAwMCxcbiAgVElNRV9XQUlUX01PTklUT1JfS0lMTDogMiAqIDEwMDAsXG4gIFRJTUVfV0FJVF9QSU5HOiAzMCAqIDEwMDAsXG4gIFRJTUVfV0FJVF9NQVhfUElORzogNSAqIDYwICogMTAwMCxcbiAgREVGQVVMVF9VRFBfSEVBUlRCRUFUX1RJTUU6IDIwICogMTAwMCxcbiAgREVGQVVMVF9VRFBfSEVBUlRCRUFUX1RJTUVPVVQ6IDEwMCAqIDEwMDAsXG4gIERFRkFVTFRfTVFUVF9IRUFSVEJFQVRfVElNRU9VVDogOTAgKiAxMDAwXG59O1xuIl19