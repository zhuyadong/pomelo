"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.KEYWORDS = {
    BEFORE_FILTER: "__befores__",
    AFTER_FILTER: "__afters__",
    GLOBAL_BEFORE_FILTER: "__globalBefores__",
    GLOBAL_AFTER_FILTER: "__globalAfters__",
    ROUTE: "__routes__",
    BEFORE_STOP_HOOK: "__beforeStopHook__",
    MODULE: "__modules__",
    SERVER_MAP: "__serverMap__",
    RPC_BEFORE_FILTER: "__rpcBefores__",
    RPC_AFTER_FILTER: "__rpcAfters__",
    MASTER_WATCHER: "__masterwatcher__",
    MONITOR_WATCHER: "__monitorwatcher__"
};
exports.FILEPATH = {
    MASTER: "/config/master.json",
    SERVER: "/config/servers.json",
    CRON: "/config/crons.json",
    LOG: "/config/log4js.json",
    SERVER_PROTOS: "/config/serverProtos.json",
    CLIENT_PROTOS: "/config/clientProtos.json",
    MASTER_HA: "/config/masterha.json",
    LIFECYCLE: "/lifecycle.js",
    SERVER_DIR: "/app/servers/",
    CONFIG_DIR: "/config"
};
exports.DIR = {
    HANDLER: "handler",
    REMOTE: "remote",
    CRON: "cron",
    LOG: "logs",
    SCRIPT: "scripts",
    EVENT: "events",
    COMPONENT: "components"
};
exports.RESERVED = {
    BASE: "base",
    MAIN: "main",
    MASTER: "master",
    SERVERS: "servers",
    ENV: "env",
    CPU: "cpu",
    ENV_DEV: "development",
    ENV_PRO: "production",
    ALL: "all",
    SERVER_TYPE: "serverType",
    SERVER_ID: "serverId",
    CURRENT_SERVER: "curServer",
    MODE: "mode",
    TYPE: "type",
    CLUSTER: "clusters",
    STAND_ALONE: "stand-alone",
    START: "start",
    AFTER_START: "afterStart",
    CRONS: "crons",
    ERROR_HANDLER: "errorHandler",
    GLOBAL_ERROR_HANDLER: "globalErrorHandler",
    AUTO_RESTART: "auto-restart",
    RESTART_FORCE: "restart-force",
    CLUSTER_COUNT: "clusterCount",
    CLUSTER_PREFIX: "cluster-server-",
    CLUSTER_SIGNAL: "++",
    RPC_ERROR_HANDLER: "rpcErrorHandler",
    SERVER: "server",
    CLIENT: "client",
    STARTID: "startId",
    STOP_SERVERS: "stop_servers",
    SSH_CONFIG_PARAMS: "ssh_config_params"
};
exports.COMMAND = {
    TASKSET: "taskset",
    KILL: "kill",
    TASKKILL: "taskkill",
    SSH: "ssh"
};
exports.PLATFORM = {
    WIN: "win32",
    LINUX: "linux"
};
exports.LIFECYCLE = {
    BEFORE_STARTUP: "beforeStartup",
    BEFORE_SHUTDOWN: "beforeShutdown",
    AFTER_STARTUP: "afterStartup",
    AFTER_STARTALL: "afterStartAll"
};
exports.SIGNAL = {
    FAIL: 0,
    OK: 1
};
exports.TIME = {
    TIME_WAIT_STOP: 3 * 1000,
    TIME_WAIT_KILL: 5 * 1000,
    TIME_WAIT_RESTART: 5 * 1000,
    TIME_WAIT_COUNTDOWN: 10 * 1000,
    TIME_WAIT_MASTER_KILL: 2 * 60 * 1000,
    TIME_WAIT_MONITOR_KILL: 2 * 1000,
    TIME_WAIT_PING: 30 * 1000,
    TIME_WAIT_MAX_PING: 5 * 60 * 1000,
    DEFAULT_UDP_HEARTBEAT_TIME: 20 * 1000,
    DEFAULT_UDP_HEARTBEAT_TIMEOUT: 100 * 1000,
    DEFAULT_MQTT_HEARTBEAT_TIMEOUT: 90 * 1000
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uc3RhbnRzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiY29uc3RhbnRzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQWEsUUFBQSxRQUFRLEdBQUc7SUFDdEIsYUFBYSxFQUFFLGFBQWE7SUFDNUIsWUFBWSxFQUFFLFlBQVk7SUFDMUIsb0JBQW9CLEVBQUUsbUJBQW1CO0lBQ3pDLG1CQUFtQixFQUFFLGtCQUFrQjtJQUN2QyxLQUFLLEVBQUUsWUFBWTtJQUNuQixnQkFBZ0IsRUFBRSxvQkFBb0I7SUFDdEMsTUFBTSxFQUFFLGFBQWE7SUFDckIsVUFBVSxFQUFFLGVBQWU7SUFDM0IsaUJBQWlCLEVBQUUsZ0JBQWdCO0lBQ25DLGdCQUFnQixFQUFFLGVBQWU7SUFDakMsY0FBYyxFQUFFLG1CQUFtQjtJQUNuQyxlQUFlLEVBQUUsb0JBQW9CO0NBQ3RDLENBQUM7QUFFVyxRQUFBLFFBQVEsR0FBRztJQUN0QixNQUFNLEVBQUUscUJBQXFCO0lBQzdCLE1BQU0sRUFBRSxzQkFBc0I7SUFDOUIsSUFBSSxFQUFFLG9CQUFvQjtJQUMxQixHQUFHLEVBQUUscUJBQXFCO0lBQzFCLGFBQWEsRUFBRSwyQkFBMkI7SUFDMUMsYUFBYSxFQUFFLDJCQUEyQjtJQUMxQyxTQUFTLEVBQUUsdUJBQXVCO0lBQ2xDLFNBQVMsRUFBRSxlQUFlO0lBQzFCLFVBQVUsRUFBRSxlQUFlO0lBQzNCLFVBQVUsRUFBRSxTQUFTO0NBQ3RCLENBQUM7QUFFVyxRQUFBLEdBQUcsR0FBRztJQUNqQixPQUFPLEVBQUUsU0FBUztJQUNsQixNQUFNLEVBQUUsUUFBUTtJQUNoQixJQUFJLEVBQUUsTUFBTTtJQUNaLEdBQUcsRUFBRSxNQUFNO0lBQ1gsTUFBTSxFQUFFLFNBQVM7SUFDakIsS0FBSyxFQUFFLFFBQVE7SUFDZixTQUFTLEVBQUUsWUFBWTtDQUN4QixDQUFDO0FBRVcsUUFBQSxRQUFRLEdBQUc7SUFDdEIsSUFBSSxFQUFFLE1BQU07SUFDWixJQUFJLEVBQUUsTUFBTTtJQUNaLE1BQU0sRUFBRSxRQUFRO0lBQ2hCLE9BQU8sRUFBRSxTQUFTO0lBQ2xCLEdBQUcsRUFBRSxLQUFLO0lBQ1YsR0FBRyxFQUFFLEtBQUs7SUFDVixPQUFPLEVBQUUsYUFBYTtJQUN0QixPQUFPLEVBQUUsWUFBWTtJQUNyQixHQUFHLEVBQUUsS0FBSztJQUNWLFdBQVcsRUFBRSxZQUFZO0lBQ3pCLFNBQVMsRUFBRSxVQUFVO0lBQ3JCLGNBQWMsRUFBRSxXQUFXO0lBQzNCLElBQUksRUFBRSxNQUFNO0lBQ1osSUFBSSxFQUFFLE1BQU07SUFDWixPQUFPLEVBQUUsVUFBVTtJQUNuQixXQUFXLEVBQUUsYUFBYTtJQUMxQixLQUFLLEVBQUUsT0FBTztJQUNkLFdBQVcsRUFBRSxZQUFZO0lBQ3pCLEtBQUssRUFBRSxPQUFPO0lBQ2QsYUFBYSxFQUFFLGNBQWM7SUFDN0Isb0JBQW9CLEVBQUUsb0JBQW9CO0lBQzFDLFlBQVksRUFBRSxjQUFjO0lBQzVCLGFBQWEsRUFBRSxlQUFlO0lBQzlCLGFBQWEsRUFBRSxjQUFjO0lBQzdCLGNBQWMsRUFBRSxpQkFBaUI7SUFDakMsY0FBYyxFQUFFLElBQUk7SUFDcEIsaUJBQWlCLEVBQUUsaUJBQWlCO0lBQ3BDLE1BQU0sRUFBRSxRQUFRO0lBQ2hCLE1BQU0sRUFBRSxRQUFRO0lBQ2hCLE9BQU8sRUFBRSxTQUFTO0lBQ2xCLFlBQVksRUFBRSxjQUFjO0lBQzVCLGlCQUFpQixFQUFFLG1CQUFtQjtDQUN2QyxDQUFDO0FBRVcsUUFBQSxPQUFPLEdBQUc7SUFDckIsT0FBTyxFQUFFLFNBQVM7SUFDbEIsSUFBSSxFQUFFLE1BQU07SUFDWixRQUFRLEVBQUUsVUFBVTtJQUNwQixHQUFHLEVBQUUsS0FBSztDQUNYLENBQUM7QUFFVyxRQUFBLFFBQVEsR0FBRztJQUN0QixHQUFHLEVBQUUsT0FBTztJQUNaLEtBQUssRUFBRSxPQUFPO0NBQ2YsQ0FBQztBQUVXLFFBQUEsU0FBUyxHQUFHO0lBQ3ZCLGNBQWMsRUFBRSxlQUFlO0lBQy9CLGVBQWUsRUFBRSxnQkFBZ0I7SUFDakMsYUFBYSxFQUFFLGNBQWM7SUFDN0IsY0FBYyxFQUFFLGVBQWU7Q0FDaEMsQ0FBQztBQUVXLFFBQUEsTUFBTSxHQUFHO0lBQ3BCLElBQUksRUFBRSxDQUFDO0lBQ1AsRUFBRSxFQUFFLENBQUM7Q0FDTixDQUFDO0FBRVcsUUFBQSxJQUFJLEdBQUc7SUFDbEIsY0FBYyxFQUFFLENBQUMsR0FBRyxJQUFJO0lBQ3hCLGNBQWMsRUFBRSxDQUFDLEdBQUcsSUFBSTtJQUN4QixpQkFBaUIsRUFBRSxDQUFDLEdBQUcsSUFBSTtJQUMzQixtQkFBbUIsRUFBRSxFQUFFLEdBQUcsSUFBSTtJQUM5QixxQkFBcUIsRUFBRSxDQUFDLEdBQUcsRUFBRSxHQUFHLElBQUk7SUFDcEMsc0JBQXNCLEVBQUUsQ0FBQyxHQUFHLElBQUk7SUFDaEMsY0FBYyxFQUFFLEVBQUUsR0FBRyxJQUFJO0lBQ3pCLGtCQUFrQixFQUFFLENBQUMsR0FBRyxFQUFFLEdBQUcsSUFBSTtJQUNqQywwQkFBMEIsRUFBRSxFQUFFLEdBQUcsSUFBSTtJQUNyQyw2QkFBNkIsRUFBRSxHQUFHLEdBQUcsSUFBSTtJQUN6Qyw4QkFBOEIsRUFBRSxFQUFFLEdBQUcsSUFBSTtDQUMxQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IEtFWVdPUkRTID0ge1xyXG4gIEJFRk9SRV9GSUxURVI6IFwiX19iZWZvcmVzX19cIixcclxuICBBRlRFUl9GSUxURVI6IFwiX19hZnRlcnNfX1wiLFxyXG4gIEdMT0JBTF9CRUZPUkVfRklMVEVSOiBcIl9fZ2xvYmFsQmVmb3Jlc19fXCIsXHJcbiAgR0xPQkFMX0FGVEVSX0ZJTFRFUjogXCJfX2dsb2JhbEFmdGVyc19fXCIsXHJcbiAgUk9VVEU6IFwiX19yb3V0ZXNfX1wiLFxyXG4gIEJFRk9SRV9TVE9QX0hPT0s6IFwiX19iZWZvcmVTdG9wSG9va19fXCIsXHJcbiAgTU9EVUxFOiBcIl9fbW9kdWxlc19fXCIsXHJcbiAgU0VSVkVSX01BUDogXCJfX3NlcnZlck1hcF9fXCIsXHJcbiAgUlBDX0JFRk9SRV9GSUxURVI6IFwiX19ycGNCZWZvcmVzX19cIixcclxuICBSUENfQUZURVJfRklMVEVSOiBcIl9fcnBjQWZ0ZXJzX19cIixcclxuICBNQVNURVJfV0FUQ0hFUjogXCJfX21hc3RlcndhdGNoZXJfX1wiLFxyXG4gIE1PTklUT1JfV0FUQ0hFUjogXCJfX21vbml0b3J3YXRjaGVyX19cIlxyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IEZJTEVQQVRIID0ge1xyXG4gIE1BU1RFUjogXCIvY29uZmlnL21hc3Rlci5qc29uXCIsXHJcbiAgU0VSVkVSOiBcIi9jb25maWcvc2VydmVycy5qc29uXCIsXHJcbiAgQ1JPTjogXCIvY29uZmlnL2Nyb25zLmpzb25cIixcclxuICBMT0c6IFwiL2NvbmZpZy9sb2c0anMuanNvblwiLFxyXG4gIFNFUlZFUl9QUk9UT1M6IFwiL2NvbmZpZy9zZXJ2ZXJQcm90b3MuanNvblwiLFxyXG4gIENMSUVOVF9QUk9UT1M6IFwiL2NvbmZpZy9jbGllbnRQcm90b3MuanNvblwiLFxyXG4gIE1BU1RFUl9IQTogXCIvY29uZmlnL21hc3RlcmhhLmpzb25cIixcclxuICBMSUZFQ1lDTEU6IFwiL2xpZmVjeWNsZS5qc1wiLFxyXG4gIFNFUlZFUl9ESVI6IFwiL2FwcC9zZXJ2ZXJzL1wiLFxyXG4gIENPTkZJR19ESVI6IFwiL2NvbmZpZ1wiXHJcbn07XHJcblxyXG5leHBvcnQgY29uc3QgRElSID0ge1xyXG4gIEhBTkRMRVI6IFwiaGFuZGxlclwiLFxyXG4gIFJFTU9URTogXCJyZW1vdGVcIixcclxuICBDUk9OOiBcImNyb25cIixcclxuICBMT0c6IFwibG9nc1wiLFxyXG4gIFNDUklQVDogXCJzY3JpcHRzXCIsXHJcbiAgRVZFTlQ6IFwiZXZlbnRzXCIsXHJcbiAgQ09NUE9ORU5UOiBcImNvbXBvbmVudHNcIlxyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IFJFU0VSVkVEID0ge1xyXG4gIEJBU0U6IFwiYmFzZVwiLFxyXG4gIE1BSU46IFwibWFpblwiLFxyXG4gIE1BU1RFUjogXCJtYXN0ZXJcIixcclxuICBTRVJWRVJTOiBcInNlcnZlcnNcIixcclxuICBFTlY6IFwiZW52XCIsXHJcbiAgQ1BVOiBcImNwdVwiLFxyXG4gIEVOVl9ERVY6IFwiZGV2ZWxvcG1lbnRcIixcclxuICBFTlZfUFJPOiBcInByb2R1Y3Rpb25cIixcclxuICBBTEw6IFwiYWxsXCIsXHJcbiAgU0VSVkVSX1RZUEU6IFwic2VydmVyVHlwZVwiLFxyXG4gIFNFUlZFUl9JRDogXCJzZXJ2ZXJJZFwiLFxyXG4gIENVUlJFTlRfU0VSVkVSOiBcImN1clNlcnZlclwiLFxyXG4gIE1PREU6IFwibW9kZVwiLFxyXG4gIFRZUEU6IFwidHlwZVwiLFxyXG4gIENMVVNURVI6IFwiY2x1c3RlcnNcIixcclxuICBTVEFORF9BTE9ORTogXCJzdGFuZC1hbG9uZVwiLFxyXG4gIFNUQVJUOiBcInN0YXJ0XCIsXHJcbiAgQUZURVJfU1RBUlQ6IFwiYWZ0ZXJTdGFydFwiLFxyXG4gIENST05TOiBcImNyb25zXCIsXHJcbiAgRVJST1JfSEFORExFUjogXCJlcnJvckhhbmRsZXJcIixcclxuICBHTE9CQUxfRVJST1JfSEFORExFUjogXCJnbG9iYWxFcnJvckhhbmRsZXJcIixcclxuICBBVVRPX1JFU1RBUlQ6IFwiYXV0by1yZXN0YXJ0XCIsXHJcbiAgUkVTVEFSVF9GT1JDRTogXCJyZXN0YXJ0LWZvcmNlXCIsXHJcbiAgQ0xVU1RFUl9DT1VOVDogXCJjbHVzdGVyQ291bnRcIixcclxuICBDTFVTVEVSX1BSRUZJWDogXCJjbHVzdGVyLXNlcnZlci1cIixcclxuICBDTFVTVEVSX1NJR05BTDogXCIrK1wiLFxyXG4gIFJQQ19FUlJPUl9IQU5ETEVSOiBcInJwY0Vycm9ySGFuZGxlclwiLFxyXG4gIFNFUlZFUjogXCJzZXJ2ZXJcIixcclxuICBDTElFTlQ6IFwiY2xpZW50XCIsXHJcbiAgU1RBUlRJRDogXCJzdGFydElkXCIsXHJcbiAgU1RPUF9TRVJWRVJTOiBcInN0b3Bfc2VydmVyc1wiLFxyXG4gIFNTSF9DT05GSUdfUEFSQU1TOiBcInNzaF9jb25maWdfcGFyYW1zXCJcclxufTtcclxuXHJcbmV4cG9ydCBjb25zdCBDT01NQU5EID0ge1xyXG4gIFRBU0tTRVQ6IFwidGFza3NldFwiLFxyXG4gIEtJTEw6IFwia2lsbFwiLFxyXG4gIFRBU0tLSUxMOiBcInRhc2traWxsXCIsXHJcbiAgU1NIOiBcInNzaFwiXHJcbn07XHJcblxyXG5leHBvcnQgY29uc3QgUExBVEZPUk0gPSB7XHJcbiAgV0lOOiBcIndpbjMyXCIsXHJcbiAgTElOVVg6IFwibGludXhcIlxyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IExJRkVDWUNMRSA9IHtcclxuICBCRUZPUkVfU1RBUlRVUDogXCJiZWZvcmVTdGFydHVwXCIsXHJcbiAgQkVGT1JFX1NIVVRET1dOOiBcImJlZm9yZVNodXRkb3duXCIsXHJcbiAgQUZURVJfU1RBUlRVUDogXCJhZnRlclN0YXJ0dXBcIixcclxuICBBRlRFUl9TVEFSVEFMTDogXCJhZnRlclN0YXJ0QWxsXCJcclxufTtcclxuXHJcbmV4cG9ydCBjb25zdCBTSUdOQUwgPSB7XHJcbiAgRkFJTDogMCxcclxuICBPSzogMVxyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IFRJTUUgPSB7XHJcbiAgVElNRV9XQUlUX1NUT1A6IDMgKiAxMDAwLFxyXG4gIFRJTUVfV0FJVF9LSUxMOiA1ICogMTAwMCxcclxuICBUSU1FX1dBSVRfUkVTVEFSVDogNSAqIDEwMDAsXHJcbiAgVElNRV9XQUlUX0NPVU5URE9XTjogMTAgKiAxMDAwLFxyXG4gIFRJTUVfV0FJVF9NQVNURVJfS0lMTDogMiAqIDYwICogMTAwMCxcclxuICBUSU1FX1dBSVRfTU9OSVRPUl9LSUxMOiAyICogMTAwMCxcclxuICBUSU1FX1dBSVRfUElORzogMzAgKiAxMDAwLFxyXG4gIFRJTUVfV0FJVF9NQVhfUElORzogNSAqIDYwICogMTAwMCxcclxuICBERUZBVUxUX1VEUF9IRUFSVEJFQVRfVElNRTogMjAgKiAxMDAwLFxyXG4gIERFRkFVTFRfVURQX0hFQVJUQkVBVF9USU1FT1VUOiAxMDAgKiAxMDAwLFxyXG4gIERFRkFVTFRfTVFUVF9IRUFSVEJFQVRfVElNRU9VVDogOTAgKiAxMDAwXHJcbn07XHJcbiJdfQ==