"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const fs = require("fs");
const path = require("path");
const constants_1 = require("./constants");
function getSysRemotePath(role) {
    let p = path.join(__dirname, '/../common/remote/', role);
    return fs.existsSync(p) ? p : null;
}
exports.getSysRemotePath = getSysRemotePath;
function getUserRemotePath(appBase, serverType) {
    let p = path.join(appBase, '/app/servers/', serverType, constants_1.DIR.REMOTE);
    return fs.existsSync(p) ? p : null;
}
exports.getUserRemotePath = getUserRemotePath;
function getCronPath(appBase, serverType) {
    let p = path.join(appBase, '/app/servers/', serverType, constants_1.DIR.CRON);
    return fs.existsSync(p) ? p : null;
}
exports.getCronPath = getCronPath;
function listUserRemoteDir(appBase) {
    let base = path.join(appBase, '/app/servers/');
    let files = fs.readdirSync(base);
    return files.filter((fn) => {
        if (fn.charAt(0) === '.') {
            return false;
        }
        return fs.statSync(path.join(base, fn)).isDirectory();
    });
}
exports.listUserRemoteDir = listUserRemoteDir;
function remotePathRecord(namespace, serverType, path) {
    return { namespace: namespace, serverType: serverType, path: path };
}
exports.remotePathRecord = remotePathRecord;
function getHandlerPath(appBase, serverType) {
    let p = path.join(appBase, '/app/servers/', serverType, constants_1.DIR.HANDLER);
    return fs.existsSync(p) ? p : null;
}
exports.getHandlerPath = getHandlerPath;
function getScriptPath(appBase) {
    return path.join(appBase, constants_1.DIR.SCRIPT);
}
exports.getScriptPath = getScriptPath;
function getLogPath(appBase) {
    return path.join(appBase, constants_1.DIR.LOG);
}
exports.getLogPath = getLogPath;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGF0aFV0aWwuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJwYXRoVXRpbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLHlCQUEwQjtBQUMxQiw2QkFBOEI7QUFDOUIsMkNBQWtDO0FBRWxDLDBCQUFpQyxJQUFXO0lBQzFDLElBQUksQ0FBQyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxFQUFFLG9CQUFvQixFQUFFLElBQUksQ0FBQyxDQUFDO0lBQ3pELE1BQU0sQ0FBQyxFQUFFLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQztBQUNyQyxDQUFDO0FBSEQsNENBR0M7QUFFRCwyQkFBa0MsT0FBYyxFQUFFLFVBQWlCO0lBQ2pFLElBQUksQ0FBQyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLGVBQWUsRUFBRSxVQUFVLEVBQUUsZUFBRyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQ3BFLE1BQU0sQ0FBQyxFQUFFLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQztBQUNyQyxDQUFDO0FBSEQsOENBR0M7QUFFRCxxQkFBNEIsT0FBYyxFQUFFLFVBQWlCO0lBQzNELElBQUksQ0FBQyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLGVBQWUsRUFBRSxVQUFVLEVBQUUsZUFBRyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ2xFLE1BQU0sQ0FBQyxFQUFFLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQztBQUNyQyxDQUFDO0FBSEQsa0NBR0M7QUFFRCwyQkFBa0MsT0FBYztJQUM5QyxJQUFJLElBQUksR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sRUFBRSxlQUFlLENBQUMsQ0FBQztJQUMvQyxJQUFJLEtBQUssR0FBRyxFQUFFLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ2pDLE1BQU0sQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLENBQUMsRUFBRSxFQUFDLEVBQUU7UUFDeEIsRUFBRSxDQUFBLENBQUMsRUFBRSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsS0FBSyxHQUFHLENBQUMsQ0FBQyxDQUFDO1lBQ3hCLE1BQU0sQ0FBQyxLQUFLLENBQUM7UUFDZixDQUFDO1FBRUQsTUFBTSxDQUFDLEVBQUUsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxXQUFXLEVBQUUsQ0FBQztJQUN4RCxDQUFDLENBQUMsQ0FBQztBQUNMLENBQUM7QUFWRCw4Q0FVQztBQUVELDBCQUFpQyxTQUFnQixFQUFFLFVBQWlCLEVBQUUsSUFBVztJQUMvRSxNQUFNLENBQUMsRUFBQyxTQUFTLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBRSxVQUFVLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBQyxDQUFDO0FBQ3BFLENBQUM7QUFGRCw0Q0FFQztBQUVELHdCQUErQixPQUFjLEVBQUUsVUFBaUI7SUFDOUQsSUFBSSxDQUFDLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUUsZUFBZSxFQUFFLFVBQVUsRUFBRSxlQUFHLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDckUsTUFBTSxDQUFDLEVBQUUsQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDO0FBQ3JDLENBQUM7QUFIRCx3Q0FHQztBQUVELHVCQUE4QixPQUFjO0lBQzFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sRUFBRSxlQUFHLENBQUMsTUFBTSxDQUFDLENBQUM7QUFDeEMsQ0FBQztBQUZELHNDQUVDO0FBRUQsb0JBQTJCLE9BQWM7SUFDdkMsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLGVBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQztBQUNyQyxDQUFDO0FBRkQsZ0NBRUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZnMgPSByZXF1aXJlKCdmcycpO1xuaW1wb3J0IHBhdGggPSByZXF1aXJlKCdwYXRoJyk7XG5pbXBvcnQgeyBESVIgfSBmcm9tICcuL2NvbnN0YW50cyc7XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRTeXNSZW1vdGVQYXRoKHJvbGU6c3RyaW5nKSB7XG4gIGxldCBwID0gcGF0aC5qb2luKF9fZGlybmFtZSwgJy8uLi9jb21tb24vcmVtb3RlLycsIHJvbGUpO1xuICByZXR1cm4gZnMuZXhpc3RzU3luYyhwKSA/IHAgOiBudWxsO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0VXNlclJlbW90ZVBhdGgoYXBwQmFzZTpzdHJpbmcsIHNlcnZlclR5cGU6c3RyaW5nKSB7XG4gIGxldCBwID0gcGF0aC5qb2luKGFwcEJhc2UsICcvYXBwL3NlcnZlcnMvJywgc2VydmVyVHlwZSwgRElSLlJFTU9URSk7XG4gIHJldHVybiBmcy5leGlzdHNTeW5jKHApID8gcCA6IG51bGw7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRDcm9uUGF0aChhcHBCYXNlOnN0cmluZywgc2VydmVyVHlwZTpzdHJpbmcpIHtcbiAgbGV0IHAgPSBwYXRoLmpvaW4oYXBwQmFzZSwgJy9hcHAvc2VydmVycy8nLCBzZXJ2ZXJUeXBlLCBESVIuQ1JPTik7XG4gIHJldHVybiBmcy5leGlzdHNTeW5jKHApID8gcCA6IG51bGw7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBsaXN0VXNlclJlbW90ZURpcihhcHBCYXNlOnN0cmluZykge1xuICBsZXQgYmFzZSA9IHBhdGguam9pbihhcHBCYXNlLCAnL2FwcC9zZXJ2ZXJzLycpO1xuICBsZXQgZmlsZXMgPSBmcy5yZWFkZGlyU3luYyhiYXNlKTtcbiAgcmV0dXJuIGZpbGVzLmZpbHRlcigoZm4pPT4ge1xuICAgIGlmKGZuLmNoYXJBdCgwKSA9PT0gJy4nKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuXG4gICAgcmV0dXJuIGZzLnN0YXRTeW5jKHBhdGguam9pbihiYXNlLCBmbikpLmlzRGlyZWN0b3J5KCk7XG4gIH0pO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcmVtb3RlUGF0aFJlY29yZChuYW1lc3BhY2U6c3RyaW5nLCBzZXJ2ZXJUeXBlOnN0cmluZywgcGF0aDpzdHJpbmcpIHtcbiAgcmV0dXJuIHtuYW1lc3BhY2U6IG5hbWVzcGFjZSwgc2VydmVyVHlwZTogc2VydmVyVHlwZSwgcGF0aDogcGF0aH07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRIYW5kbGVyUGF0aChhcHBCYXNlOnN0cmluZywgc2VydmVyVHlwZTpzdHJpbmcpIHtcbiAgbGV0IHAgPSBwYXRoLmpvaW4oYXBwQmFzZSwgJy9hcHAvc2VydmVycy8nLCBzZXJ2ZXJUeXBlLCBESVIuSEFORExFUik7XG4gIHJldHVybiBmcy5leGlzdHNTeW5jKHApID8gcCA6IG51bGw7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRTY3JpcHRQYXRoKGFwcEJhc2U6c3RyaW5nKSB7XG4gIHJldHVybiBwYXRoLmpvaW4oYXBwQmFzZSwgRElSLlNDUklQVCk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRMb2dQYXRoKGFwcEJhc2U6c3RyaW5nKSB7XG4gIHJldHVybiBwYXRoLmpvaW4oYXBwQmFzZSwgRElSLkxPRyk7XG59XG4iXX0=