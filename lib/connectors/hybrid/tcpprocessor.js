"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const utils = require("../../util/utils");
const tcpsocket_1 = require("./tcpsocket");
const events_1 = require("events");
var State;
(function (State) {
    State[State["ST_STARTED"] = 1] = "ST_STARTED";
    State[State["ST_CLOSED"] = 2] = "ST_CLOSED";
})(State || (State = {}));
// private protocol, no need exports
const HEAD_SIZE = 4;
class TCPProcessor extends events_1.EventEmitter {
    constructor(closeMethod) {
        super();
        this.closeMethod = closeMethod;
        this.state = State.ST_STARTED;
    }
    add(socket, data) {
        if (this.state !== State.ST_STARTED) {
            return;
        }
        let tcpsocket = new tcpsocket_1.default(socket, {
            headSize: HEAD_SIZE,
            headHandler: utils.headHandler,
            closeMethod: this.closeMethod
        });
        this.emit("connection", tcpsocket);
        socket.emit("data", data);
    }
    close() {
        if (this.state !== State.ST_STARTED) {
            return;
        }
        this.state = State.ST_CLOSED;
    }
}
exports.default = TCPProcessor;
exports.TCPProcessor = TCPProcessor;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGNwcHJvY2Vzc29yLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsidGNwcHJvY2Vzc29yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQ0EsMENBQTJDO0FBQzNDLDJDQUFvQztBQUNwQyxtQ0FBc0M7QUFHdEMsSUFBSyxLQUdKO0FBSEQsV0FBSyxLQUFLO0lBQ1IsNkNBQWMsQ0FBQTtJQUNkLDJDQUFhLENBQUE7QUFDZixDQUFDLEVBSEksS0FBSyxLQUFMLEtBQUssUUFHVDtBQUVELG9DQUFvQztBQUNwQyxNQUFNLFNBQVMsR0FBRyxDQUFDLENBQUM7QUFFcEIsa0JBQWtDLFNBQVEscUJBQVk7SUFFcEQsWUFBb0IsV0FBbUI7UUFDckMsS0FBSyxFQUFFLENBQUM7UUFEVSxnQkFBVyxHQUFYLFdBQVcsQ0FBUTtRQUVyQyxJQUFJLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQyxVQUFVLENBQUM7SUFDaEMsQ0FBQztJQUVELEdBQUcsQ0FBQyxNQUFjLEVBQUUsSUFBUztRQUMzQixFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsS0FBSyxLQUFLLEtBQUssQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDO1lBQ3BDLE1BQU0sQ0FBQztRQUNULENBQUM7UUFDRCxJQUFJLFNBQVMsR0FBRyxJQUFJLG1CQUFTLENBQUMsTUFBTSxFQUFFO1lBQ3BDLFFBQVEsRUFBRSxTQUFTO1lBQ25CLFdBQVcsRUFBRSxLQUFLLENBQUMsV0FBVztZQUM5QixXQUFXLEVBQUUsSUFBSSxDQUFDLFdBQVc7U0FDOUIsQ0FBQyxDQUFDO1FBQ0gsSUFBSSxDQUFDLElBQUksQ0FBQyxZQUFZLEVBQUUsU0FBUyxDQUFDLENBQUM7UUFDbkMsTUFBTSxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDNUIsQ0FBQztJQUVELEtBQUs7UUFDSCxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsS0FBSyxLQUFLLEtBQUssQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDO1lBQ3BDLE1BQU0sQ0FBQztRQUNULENBQUM7UUFDRCxJQUFJLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQyxTQUFTLENBQUM7SUFDL0IsQ0FBQztDQUNGO0FBMUJELCtCQTBCQztBQUVPLG9DQUFZIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHV0aWwgPSByZXF1aXJlKFwidXRpbFwiKTtcclxuaW1wb3J0IHV0aWxzID0gcmVxdWlyZShcIi4uLy4uL3V0aWwvdXRpbHNcIik7XHJcbmltcG9ydCBUY3BTb2NrZXQgZnJvbSAnLi90Y3Bzb2NrZXQnO1xyXG5pbXBvcnQgeyBFdmVudEVtaXR0ZXIgfSBmcm9tIFwiZXZlbnRzXCI7XHJcbmltcG9ydCB7IFNvY2tldCB9IGZyb20gXCJuZXRcIjtcclxuXHJcbmVudW0gU3RhdGUge1xyXG4gIFNUX1NUQVJURUQgPSAxLFxyXG4gIFNUX0NMT1NFRCA9IDJcclxufVxyXG5cclxuLy8gcHJpdmF0ZSBwcm90b2NvbCwgbm8gbmVlZCBleHBvcnRzXHJcbmNvbnN0IEhFQURfU0laRSA9IDQ7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBUQ1BQcm9jZXNzb3IgZXh0ZW5kcyBFdmVudEVtaXR0ZXIge1xyXG4gIHByaXZhdGUgc3RhdGU6IFN0YXRlO1xyXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgY2xvc2VNZXRob2Q6IHN0cmluZykge1xyXG4gICAgc3VwZXIoKTtcclxuICAgIHRoaXMuc3RhdGUgPSBTdGF0ZS5TVF9TVEFSVEVEO1xyXG4gIH1cclxuXHJcbiAgYWRkKHNvY2tldDogU29ja2V0LCBkYXRhOiBhbnkpIHtcclxuICAgIGlmICh0aGlzLnN0YXRlICE9PSBTdGF0ZS5TVF9TVEFSVEVEKSB7XHJcbiAgICAgIHJldHVybjtcclxuICAgIH1cclxuICAgIGxldCB0Y3Bzb2NrZXQgPSBuZXcgVGNwU29ja2V0KHNvY2tldCwge1xyXG4gICAgICBoZWFkU2l6ZTogSEVBRF9TSVpFLFxyXG4gICAgICBoZWFkSGFuZGxlcjogdXRpbHMuaGVhZEhhbmRsZXIsXHJcbiAgICAgIGNsb3NlTWV0aG9kOiB0aGlzLmNsb3NlTWV0aG9kXHJcbiAgICB9KTtcclxuICAgIHRoaXMuZW1pdChcImNvbm5lY3Rpb25cIiwgdGNwc29ja2V0KTtcclxuICAgIHNvY2tldC5lbWl0KFwiZGF0YVwiLCBkYXRhKTtcclxuICB9XHJcblxyXG4gIGNsb3NlKCkge1xyXG4gICAgaWYgKHRoaXMuc3RhdGUgIT09IFN0YXRlLlNUX1NUQVJURUQpIHtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG4gICAgdGhpcy5zdGF0ZSA9IFN0YXRlLlNUX0NMT1NFRDtcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCB7VENQUHJvY2Vzc29yfSJdfQ==